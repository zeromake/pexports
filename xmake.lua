add_rules("mode.debug", "mode.release")

set_encodings("utf-8")
if is_plat("windows") then
    add_cflags("/TC", {tools = {"clang_cl", "cl"}})
    add_cxxflags("/EHsc", {tools = {"clang_cl", "cl"}})
    add_defines("UNICODE", "_UNICODE")
end

rule("yacc")
    set_extensions(".y")
    on_buildcmd_file(function (target, batchcmds, sourcefile, opt)
        import("lib.detect.find_tool")
        local bison = assert(find_tool("bison"), "bison not found!")
        local outdir = vformat("$(buildir)/.gens/yacc")
        batchcmds:mkdir(outdir)
        batchcmds:vrunv(bison.program, {"-y", "-H", "-o", path.join(outdir, path.basename(sourcefile) .. ".c"), sourcefile})
    end)
rule("lex")
    set_extensions(".l")
    on_buildcmd_file(function (target, batchcmds, sourcefile, opt)
        import("lib.detect.find_tool")
        local flex = assert(find_tool("flex"), "flex not found!")
        local outdir = vformat("$(buildir)/.gens/yacc")
        batchcmds:mkdir(outdir)
        local output = path.join(outdir, path.basename(sourcefile) .. ".c")
        batchcmds:vrunv(flex.program, {"-o", output, sourcefile})
    end)

target("pexports.yacc")
    set_kind("object")
    add_rules("yacc", "lex")
    add_files("hlex.l", "hparse.y")

target("pexports")
    set_kind("binary")
    add_deps("pexports.yacc")
    add_includedirs(".", "$(buildir)/.gens/yacc")
    add_defines("PACKAGE_BUG_REPORT=\"https://github.com/bocke/pexports/issues\"")
    add_defines("PACKAGE_VERSION_STRING=\"0.47.0\"")
    add_files("pexports.c", "str_tree.c", "$(buildir)/.gens/yacc/*.c")
